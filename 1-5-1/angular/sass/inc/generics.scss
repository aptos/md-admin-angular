/*
 * Generate Margin Class
 * margin, margin-top, margin-bottom, margin-left, margin-right
 */

 @mixin margin($label, $size: 1, $key:1) { 
  @if $size <= 30 {
    .m-${key} {
      margin: $size !important;
    }

    .m-t-${key} {
      margin-top: $size !important;
    }

    .m-b-${key} {
      margin-bottom: $size !important;
    }

    .m-l-${key} {
      margin-left: $size !important;
    }

    .m-r-${key} {
      margin-right: $size !important;
    }
  }

  @include margin($label - 5; $size + 5; $key + 5);
}

@include margin(25, 0px, 0);

/*
 * Generate Padding Class
 * padding, padding-top, padding-bottom, padding-left, padding-right
 */

 @mixin padding($label, $size: 1, $key:1) {
  @if $size <= 30 {
    .p-${key} {
      padding: $size !important;
    }

    .p-t-${key} {
      padding-top: $size !important;
    }

    .p-b-${key} {
      padding-bottom: $size !important;
    }

    .p-l-${key} {
      padding-left: $size !important;
    }

    .p-r-${key} {
      padding-right: $size !important; 
    }
  }

  @include padding($label - 5; $size + 5; $key + 5);
} 

@include padding(25, 0px, 0);

/*
 * Font Weight
 */
 @include f-300 { font-weight: 300 !important; }
 @include f-400 { font-weight: 400 !important; }
 @include f-500 { font-weight: 500 !important; }
 @include f-700 { font-weight: 700 !important; }

/*
 * Position Classes
 */
 @include p-relative { position: relative !important; }
 @include p-absolute { position: absolute !important; }
 @include p-fixed { position: fixed !important; }
 @include p-static { position: static !important; }

/*
 * Overflow
 */
 @include o-hidden { overflow: hidden !important; }
 @include o-visible { overflow: visible !important; }
 @include o-auto { overflow: auto !important; }

/*
 * Display
 */
 @include d-block { display: block !important; }
 @include di-block { display: inline-block !important; } 

/* 
 * Material Background Colors
 */
 $array: c-white bgm-white $m-white, c-black bgm-black $m-black, c-brown bgm-brown $m-brown, c-pink bgm-pink $m-pink, c-red bgm-red $m-red, c-blue bgm-blue $m-blue, c-purple bgm-purple $m-purple, c-deeppurple bgm-deeppurple $m-deeppurple, c-lightblue bgm-lightblue $m-lightblue, c-cyan bgm-cyan $m-cyan, c-teal bgm-teal $m-teal, c-green bgm-green $m-green, c-lightgreen bgm-lightgreen $m-lightgreen, c-lime bgm-lime $m-lime, c-yellow bgm-yellow $m-yellow, c-amber bgm-amber $m-amber, c-orange bgm-orange $m-orange, c-deeporange bgm-deeporange $m-deeporange, c-gray bgm-gray $m-gray, c-bluegray bgm-bluegray $m-bluegray, c-indigo bgm-indigo $m-indigo;

 @mixin for($array); .-each($value) {
  $name:  extract($value, 1);
  $name2:  extract($value, 2);
  $color: extract($value, 3); 
  &.${name2} {
    background-color: $color !important;
  }
  
  &.${name} {
    color: $color !important;
  }
} 

/*
 * Background Colors
 */
 @include bg-black-trp { background-color: rgba(0,0,0,0.1) !important; }

/*
 * Border
 */
 @include b-0 { border: 0 !important; }

/*
 * width
 */
 @include w-100 { width: 100% !important; } 

/*
 * Border Radius 
 */ 
 @include brd-2 { border-radius: 2px; }

/*
 * Text Transform
 */
 @include t-uppercase { text-transform: uppercase; }